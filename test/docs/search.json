[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "test",
    "section": "",
    "text": "To learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "cross_copy.html",
    "href": "cross_copy.html",
    "title": "Testing cross-reference with holoviews charts",
    "section": "",
    "text": "Code\nimport pandas as pd\nfrom sklearn.datasets import load_iris\nfrom pandas import util\nimport seaborn as sns\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=3}\n\nCode\npd.options.plotting.backend = \"holoviews\"\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=4}\n\nCode\ndata = load_iris()\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=5}\n\nCode\ndf = util.testing.makeTimeDataFrame()\n\n\n/home/gonluisr/miniconda3/envs/conda_dev/lib/python3.9/site-packages/pandas/util/__init__.py:15: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n  import pandas.util.testing\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=6}\n\nCode\ndf.head()\n\n\n\n\n\n\n  \n    \n      \n      A\n      B\n      C\n      D\n    \n  \n  \n    \n      2000-01-03\n      1.126988\n      -1.147395\n      0.187442\n      -0.630229\n    \n    \n      2000-01-04\n      1.201789\n      -0.000927\n      0.723552\n      -0.852234\n    \n    \n      2000-01-05\n      -0.468707\n      0.151884\n      -0.785213\n      0.847470\n    \n    \n      2000-01-06\n      1.116639\n      0.803649\n      1.077325\n      -1.361432\n    \n    \n      2000-01-07\n      0.155205\n      -1.248513\n      0.752966\n      -0.201408\n    \n  \n\n\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=7}\n\nCode\ndf.reset_index().rename(columns={'index':'Date'}).groupby([pd.Grouper(key='Date',freq='M')]).sum()\n\n\n\n\n\n\n  \n    \n      \n      A\n      B\n      C\n      D\n    \n    \n      Date\n      \n      \n      \n      \n    \n  \n  \n    \n      2000-01-31\n      5.767612\n      -0.264180\n      5.102825\n      0.220061\n    \n    \n      2000-02-29\n      1.149543\n      -2.713967\n      1.188419\n      1.265752\n    \n  \n\n\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=8}\n\nCode\ndf = df.assign(max_value = df.max(axis=1))\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=9}\n\nCode\ndef classify(df):\n    if df['max_value'] >= 1:\n        return 'High'\n    if df['max_value'] > 0.5 and df['max_value'] < 1:\n        return 'Medium'\n    if df['max_value'] < 0.5:\n        return 'Low'\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=10}\n\nCode\ndf = df.assign(Category = df.apply(classify,axis=1))\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=11}\n\nCode\ndf['Category'] = df['Category'].astype(\"category\")\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=12}\n\nCode\ndf\n\n\n\n\n\n\n  \n    \n      \n      A\n      B\n      C\n      D\n      max_value\n      Category\n    \n  \n  \n    \n      2000-01-03\n      1.126988\n      -1.147395\n      0.187442\n      -0.630229\n      1.126988\n      High\n    \n    \n      2000-01-04\n      1.201789\n      -0.000927\n      0.723552\n      -0.852234\n      1.201789\n      High\n    \n    \n      2000-01-05\n      -0.468707\n      0.151884\n      -0.785213\n      0.847470\n      0.847470\n      Medium\n    \n    \n      2000-01-06\n      1.116639\n      0.803649\n      1.077325\n      -1.361432\n      1.116639\n      High\n    \n    \n      2000-01-07\n      0.155205\n      -1.248513\n      0.752966\n      -0.201408\n      0.752966\n      Medium\n    \n    \n      2000-01-10\n      -1.106183\n      -1.103509\n      0.734816\n      -1.539371\n      0.734816\n      Medium\n    \n    \n      2000-01-11\n      0.749808\n      0.457427\n      0.236783\n      0.007655\n      0.749808\n      Medium\n    \n    \n      2000-01-12\n      1.345924\n      -0.701440\n      0.402120\n      1.055362\n      1.345924\n      High\n    \n    \n      2000-01-13\n      -1.630626\n      -1.373218\n      1.154692\n      0.145866\n      1.154692\n      High\n    \n    \n      2000-01-14\n      0.985955\n      -0.233816\n      -0.108853\n      2.763228\n      2.763228\n      High\n    \n    \n      2000-01-17\n      0.149018\n      -0.906383\n      2.091126\n      -1.161566\n      2.091126\n      High\n    \n    \n      2000-01-18\n      -0.025945\n      -0.186756\n      0.399277\n      0.506350\n      0.506350\n      Medium\n    \n    \n      2000-01-19\n      1.649071\n      -0.814364\n      0.397560\n      0.633919\n      1.649071\n      High\n    \n    \n      2000-01-20\n      -0.231581\n      0.796854\n      0.050179\n      -0.109894\n      0.796854\n      Medium\n    \n    \n      2000-01-21\n      0.839475\n      -0.337561\n      -1.344820\n      -0.391172\n      0.839475\n      Medium\n    \n    \n      2000-01-24\n      -0.023087\n      0.814299\n      -0.134823\n      0.585606\n      0.814299\n      Medium\n    \n    \n      2000-01-25\n      1.085229\n      0.636130\n      -0.585263\n      -1.639097\n      1.085229\n      High\n    \n    \n      2000-01-26\n      -0.771849\n      0.366846\n      1.133055\n      1.377471\n      1.377471\n      High\n    \n    \n      2000-01-27\n      -0.304234\n      0.866607\n      -0.785338\n      0.050379\n      0.866607\n      Medium\n    \n    \n      2000-01-28\n      0.053750\n      2.026548\n      -1.510660\n      -0.497465\n      2.026548\n      High\n    \n    \n      2000-01-31\n      -0.129026\n      0.869457\n      1.016903\n      0.630623\n      1.016903\n      High\n    \n    \n      2000-02-01\n      -1.085380\n      -0.030132\n      1.435229\n      -1.153119\n      1.435229\n      High\n    \n    \n      2000-02-02\n      1.549394\n      -0.795620\n      2.160895\n      0.318606\n      2.160895\n      High\n    \n    \n      2000-02-03\n      -0.344825\n      0.094948\n      -0.529953\n      0.037532\n      0.094948\n      Low\n    \n    \n      2000-02-04\n      0.061480\n      -0.018256\n      1.055836\n      0.739908\n      1.055836\n      High\n    \n    \n      2000-02-07\n      0.923516\n      0.428145\n      -1.522212\n      2.815199\n      2.815199\n      High\n    \n    \n      2000-02-08\n      -0.963635\n      -1.178148\n      -0.603736\n      0.370689\n      0.370689\n      Low\n    \n    \n      2000-02-09\n      -0.151846\n      -1.137036\n      -1.355825\n      0.382550\n      0.382550\n      Low\n    \n    \n      2000-02-10\n      -0.445424\n      -0.114888\n      0.003508\n      -1.178604\n      0.003508\n      Low\n    \n    \n      2000-02-11\n      1.606264\n      0.037020\n      0.544675\n      -1.067008\n      1.606264\n      High\n    \n  \n\n\n\n:::\nSee ?@fig-plot and Figure 1\n\n\n\n\n\n\n(a) Holoviews example\n\n\n\n\n\n(b) ?(caption)\n\n\n\n\n\n(c) ?(caption)\n\n\n\n\nUnable to display output for mime type(s): \n(d) ?(caption)\n\n\n\n\n\n  \n\n\n(e) ?(caption)\n\n\nFigure 1: ?(caption)\n\n\n\n\n\n\n\nFigure 2: Seaborn pairplot example"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "cross.html",
    "href": "cross.html",
    "title": "Testing cross-reference with holoviews charts",
    "section": "",
    "text": "Code\nimport pandas as pd\nfrom sklearn.datasets import load_iris\nfrom pandas import util\nimport seaborn as sns\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=2}\n\nCode\npd.options.plotting.backend = \"holoviews\"\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=3}\n\nCode\ndata = load_iris()\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=4}\n\nCode\ndf = util.testing.makeTimeDataFrame()\n\n\n/home/gonluisr/miniconda3/envs/conda_dev/lib/python3.9/site-packages/pandas/util/__init__.py:15: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n  import pandas.util.testing\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=5}\n\nCode\ndf.head()\n\n\n\n\n\n\n  \n    \n      \n      A\n      B\n      C\n      D\n    \n  \n  \n    \n      2000-01-03\n      -0.582207\n      -1.000480\n      0.323955\n      0.007650\n    \n    \n      2000-01-04\n      0.424007\n      0.775093\n      -0.127669\n      -0.930395\n    \n    \n      2000-01-05\n      0.411417\n      -0.783818\n      -0.345699\n      -0.415395\n    \n    \n      2000-01-06\n      0.251328\n      0.623833\n      -0.278011\n      -0.412769\n    \n    \n      2000-01-07\n      0.357047\n      0.098218\n      2.741289\n      0.199595\n    \n  \n\n\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=6}\n\nCode\ndf.reset_index().rename(columns={'index':'Date'}).groupby([pd.Grouper(key='Date',freq='w-MON')]).sum()\n\n\n\n\n\n\n  \n    \n      \n      A\n      B\n      C\n      D\n    \n    \n      Date\n      \n      \n      \n      \n    \n  \n  \n    \n      2000-01-03\n      -0.582207\n      -1.000480\n      0.323955\n      0.007650\n    \n    \n      2000-01-10\n      -0.234743\n      2.167578\n      2.652053\n      -1.093058\n    \n    \n      2000-01-17\n      0.013742\n      -2.757776\n      2.834797\n      3.770157\n    \n    \n      2000-01-24\n      1.523045\n      -1.485811\n      -1.243673\n      -0.963989\n    \n    \n      2000-01-31\n      -1.848256\n      0.759201\n      -0.621093\n      -0.670768\n    \n    \n      2000-02-07\n      -1.006205\n      0.135843\n      -2.535127\n      -3.419145\n    \n    \n      2000-02-14\n      -4.913442\n      -0.683123\n      -0.694445\n      0.557568\n    \n  \n\n\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=7}\n\nCode\ndf = df.assign(max_value = df.max(axis=1))\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=8}\n\nCode\ndef classify(df):\n    if df['max_value'] >= 1:\n        return 'High'\n    if df['max_value'] > 0.5 and df['max_value'] < 1:\n        return 'Medium'\n    if df['max_value'] < 0.5:\n        return 'Low'\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=9}\n\nCode\ndf = df.assign(Category = df.apply(classify,axis=1))\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=10}\n\nCode\ndf['Category'] = df['Category'].astype(\"category\")\n\n:::\n::: {.cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=11}\n\nCode\ndf\n\n\n\n\n\n\n  \n    \n      \n      A\n      B\n      C\n      D\n      max_value\n      Category\n    \n  \n  \n    \n      2000-01-03\n      -0.582207\n      -1.000480\n      0.323955\n      0.007650\n      0.323955\n      Low\n    \n    \n      2000-01-04\n      0.424007\n      0.775093\n      -0.127669\n      -0.930395\n      0.775093\n      Medium\n    \n    \n      2000-01-05\n      0.411417\n      -0.783818\n      -0.345699\n      -0.415395\n      0.411417\n      Low\n    \n    \n      2000-01-06\n      0.251328\n      0.623833\n      -0.278011\n      -0.412769\n      0.623833\n      Medium\n    \n    \n      2000-01-07\n      0.357047\n      0.098218\n      2.741289\n      0.199595\n      2.741289\n      High\n    \n    \n      2000-01-10\n      -1.678541\n      1.454251\n      0.662143\n      0.465905\n      1.454251\n      High\n    \n    \n      2000-01-11\n      0.966773\n      0.322669\n      1.030897\n      0.297324\n      1.030897\n      High\n    \n    \n      2000-01-12\n      0.640741\n      0.021307\n      0.941115\n      0.848067\n      0.941115\n      Medium\n    \n    \n      2000-01-13\n      -0.366762\n      -0.951611\n      1.395349\n      1.230894\n      1.395349\n      High\n    \n    \n      2000-01-14\n      -0.857458\n      -1.627424\n      -1.701975\n      1.309590\n      1.309590\n      High\n    \n    \n      2000-01-17\n      -0.369552\n      -0.522716\n      1.169411\n      0.084282\n      1.169411\n      High\n    \n    \n      2000-01-18\n      0.183638\n      0.736659\n      -0.305887\n      0.388168\n      0.736659\n      Medium\n    \n    \n      2000-01-19\n      0.366433\n      -1.072837\n      -1.111730\n      -0.427861\n      0.366433\n      Low\n    \n    \n      2000-01-20\n      0.585825\n      0.347986\n      -0.934388\n      0.410635\n      0.585825\n      Medium\n    \n    \n      2000-01-21\n      0.728517\n      -0.715842\n      1.069210\n      -0.164306\n      1.069210\n      High\n    \n    \n      2000-01-24\n      -0.341368\n      -0.781776\n      0.039122\n      -1.170624\n      0.039122\n      Low\n    \n    \n      2000-01-25\n      -0.926737\n      0.399972\n      0.507149\n      2.065153\n      2.065153\n      High\n    \n    \n      2000-01-26\n      0.203486\n      0.653138\n      -1.691324\n      0.776340\n      0.776340\n      Medium\n    \n    \n      2000-01-27\n      0.311465\n      -0.332699\n      0.237594\n      -1.473875\n      0.311465\n      Low\n    \n    \n      2000-01-28\n      -0.826008\n      -1.235476\n      0.331498\n      -0.972064\n      0.331498\n      Low\n    \n    \n      2000-01-31\n      -0.610462\n      1.274265\n      -0.006010\n      -1.066323\n      1.274265\n      High\n    \n    \n      2000-02-01\n      1.705305\n      -0.255701\n      -0.466338\n      -2.782992\n      1.705305\n      High\n    \n    \n      2000-02-02\n      -0.531286\n      0.220349\n      -0.882575\n      -1.492108\n      0.220349\n      Low\n    \n    \n      2000-02-03\n      0.011553\n      0.053408\n      -0.556360\n      0.512802\n      0.512802\n      Medium\n    \n    \n      2000-02-04\n      -1.645071\n      -1.363826\n      -0.339289\n      0.479332\n      0.479332\n      Low\n    \n    \n      2000-02-07\n      -0.546705\n      1.481613\n      -0.290566\n      -0.136178\n      1.481613\n      High\n    \n    \n      2000-02-08\n      -1.319182\n      -0.473713\n      -0.714132\n      0.218225\n      0.218225\n      Low\n    \n    \n      2000-02-09\n      0.121003\n      1.047676\n      0.142332\n      0.822883\n      1.047676\n      High\n    \n    \n      2000-02-10\n      -1.286180\n      -0.918822\n      -0.301173\n      0.150331\n      0.150331\n      Low\n    \n    \n      2000-02-11\n      -2.429082\n      -0.338264\n      0.178528\n      -0.633871\n      0.178528\n      Low\n    \n  \n\n\n\n:::\nSee Figure 1\n\n\n\n\n\n\n(a) Holoviews example\n\n\n\n\n\n(b) ?(caption)\n\n\n\n\n\n(c) ?(caption)\n\n\n\n\nUnable to display output for mime type(s): \n(d) ?(caption)\n\n\n\n\n\n  \n\n\n(e) ?(caption)\n\n\nFigure 1: ?(caption)\n\n\n\n\n\n\n\nFigure 2: Seaborn pairplot example"
  }
]