[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Testing quarto book",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "cross.html",
    "href": "cross.html",
    "title": "2  Testing cross-reference with holoviews charts",
    "section": "",
    "text": "Code\nimport pandas as pd\nfrom sklearn.datasets import load_iris\nfrom pandas import util\nimport seaborn as sns\n\n\n\n\nCode\npd.options.plotting.backend = \"holoviews\"\n\n\n\n\nCode\ndata = load_iris()\n\n\n\n\nCode\ndf = util.testing.makeTimeDataFrame()\n\n\n/home/gonluisr/miniconda3/envs/conda_dev/lib/python3.9/site-packages/pandas/util/__init__.py:15: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n  import pandas.util.testing\n\n\n\n\nCode\ndf.head()\n\n\n\n\n\n\n\nTable 2.1: table\n\n\n\nA\nB\nC\nD\n\n\n\n\n2000-01-03\n-0.582207\n-1.000480\n0.323955\n0.007650\n\n\n2000-01-04\n0.424007\n0.775093\n-0.127669\n-0.930395\n\n\n2000-01-05\n0.411417\n-0.783818\n-0.345699\n-0.415395\n\n\n2000-01-06\n0.251328\n0.623833\n-0.278011\n-0.412769\n\n\n2000-01-07\n0.357047\n0.098218\n2.741289\n0.199595\n\n\n\n\n\n\n\n\n\n\nCode\ndf.reset_index().rename(columns={'index':'Date'}).groupby([pd.Grouper(key='Date',freq='w-MON')]).sum()\n\n\n\n\n\n\n\n\n\nA\nB\nC\nD\n\n\nDate\n\n\n\n\n\n\n\n\n2000-01-03\n-0.582207\n-1.000480\n0.323955\n0.007650\n\n\n2000-01-10\n-0.234743\n2.167578\n2.652053\n-1.093058\n\n\n2000-01-17\n0.013742\n-2.757776\n2.834797\n3.770157\n\n\n2000-01-24\n1.523045\n-1.485811\n-1.243673\n-0.963989\n\n\n2000-01-31\n-1.848256\n0.759201\n-0.621093\n-0.670768\n\n\n2000-02-07\n-1.006205\n0.135843\n-2.535127\n-3.419145\n\n\n2000-02-14\n-4.913442\n-0.683123\n-0.694445\n0.557568\n\n\n\n\n\n\n\n\n\nCode\ndf = df.assign(max_value = df.max(axis=1))\n\n\n\n\nCode\ndef classify(df):\n    if df['max_value'] &gt;= 1:\n        return 'High'\n    if df['max_value'] &gt; 0.5 and df['max_value'] &lt; 1:\n        return 'Medium'\n    if df['max_value'] &lt; 0.5:\n        return 'Low'\n\n\n\n\nCode\ndf = df.assign(Category = df.apply(classify,axis=1))\n\n\n\n\nCode\n\ndf['Category'] = df['Category'].astype(\"category\")\n\n\n\n\nCode\n\ndf\n\n\n\n\n\n\n\n\n\nA\nB\nC\nD\nmax_value\nCategory\n\n\n\n\n2000-01-03\n-0.582207\n-1.000480\n0.323955\n0.007650\n0.323955\nLow\n\n\n2000-01-04\n0.424007\n0.775093\n-0.127669\n-0.930395\n0.775093\nMedium\n\n\n2000-01-05\n0.411417\n-0.783818\n-0.345699\n-0.415395\n0.411417\nLow\n\n\n2000-01-06\n0.251328\n0.623833\n-0.278011\n-0.412769\n0.623833\nMedium\n\n\n2000-01-07\n0.357047\n0.098218\n2.741289\n0.199595\n2.741289\nHigh\n\n\n2000-01-10\n-1.678541\n1.454251\n0.662143\n0.465905\n1.454251\nHigh\n\n\n2000-01-11\n0.966773\n0.322669\n1.030897\n0.297324\n1.030897\nHigh\n\n\n2000-01-12\n0.640741\n0.021307\n0.941115\n0.848067\n0.941115\nMedium\n\n\n2000-01-13\n-0.366762\n-0.951611\n1.395349\n1.230894\n1.395349\nHigh\n\n\n2000-01-14\n-0.857458\n-1.627424\n-1.701975\n1.309590\n1.309590\nHigh\n\n\n2000-01-17\n-0.369552\n-0.522716\n1.169411\n0.084282\n1.169411\nHigh\n\n\n2000-01-18\n0.183638\n0.736659\n-0.305887\n0.388168\n0.736659\nMedium\n\n\n2000-01-19\n0.366433\n-1.072837\n-1.111730\n-0.427861\n0.366433\nLow\n\n\n2000-01-20\n0.585825\n0.347986\n-0.934388\n0.410635\n0.585825\nMedium\n\n\n2000-01-21\n0.728517\n-0.715842\n1.069210\n-0.164306\n1.069210\nHigh\n\n\n2000-01-24\n-0.341368\n-0.781776\n0.039122\n-1.170624\n0.039122\nLow\n\n\n2000-01-25\n-0.926737\n0.399972\n0.507149\n2.065153\n2.065153\nHigh\n\n\n2000-01-26\n0.203486\n0.653138\n-1.691324\n0.776340\n0.776340\nMedium\n\n\n2000-01-27\n0.311465\n-0.332699\n0.237594\n-1.473875\n0.311465\nLow\n\n\n2000-01-28\n-0.826008\n-1.235476\n0.331498\n-0.972064\n0.331498\nLow\n\n\n2000-01-31\n-0.610462\n1.274265\n-0.006010\n-1.066323\n1.274265\nHigh\n\n\n2000-02-01\n1.705305\n-0.255701\n-0.466338\n-2.782992\n1.705305\nHigh\n\n\n2000-02-02\n-0.531286\n0.220349\n-0.882575\n-1.492108\n0.220349\nLow\n\n\n2000-02-03\n0.011553\n0.053408\n-0.556360\n0.512802\n0.512802\nMedium\n\n\n2000-02-04\n-1.645071\n-1.363826\n-0.339289\n0.479332\n0.479332\nLow\n\n\n2000-02-07\n-0.546705\n1.481613\n-0.290566\n-0.136178\n1.481613\nHigh\n\n\n2000-02-08\n-1.319182\n-0.473713\n-0.714132\n0.218225\n0.218225\nLow\n\n\n2000-02-09\n0.121003\n1.047676\n0.142332\n0.822883\n1.047676\nHigh\n\n\n2000-02-10\n-1.286180\n-0.918822\n-0.301173\n0.150331\n0.150331\nLow\n\n\n2000-02-11\n-2.429082\n-0.338264\n0.178528\n-0.633871\n0.178528\nLow\n\n\n\n\n\n\n\nSee Figure 3.1\n\n\n\n\n\n\n(a) Holoviews example\n\n\n\n\n\n(b) ?(caption)\n\n\n\n\n\n(c) ?(caption)\n\n\n\n?(caption)\n\n\n\n\n  \n\n\n(d) ?(caption)\n\n\nFigure 2.1: ?(caption)\n\n\n\n\n\n\n\nFigure 2.2: Seaborn pairplot example"
  },
  {
    "objectID": "cross_copy.html",
    "href": "cross_copy.html",
    "title": "3  Testing cross-reference with holoviews charts",
    "section": "",
    "text": "See Figure 3.1 and Figure 3.2\n\n\n\nFigure 3.1: df.plot static\n\n\n\n\n\nFigure 3.2: pairplot status"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "4  About",
    "section": "",
    "text": "About this site"
  }
]